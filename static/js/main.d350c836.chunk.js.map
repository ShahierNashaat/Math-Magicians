{"version":3,"sources":["logic/operate.js","logic/calculate.js","components/result.js","components/button.js","components/Calculator.js","components/Home.js","components/Quote.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","calculate","obj","buttonName","total","next","match","includes","parseFloat","Result","props","output","className","defaultProps","Button","type","onClick","e","handleButtonClick","target","textContent","Calculator","useState","setOutput","outStr","Home","style","display","flexDirection","padding","Quote","height","fontSize","alignItems","textAlign","App","to","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d350c836.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nconst calculate = (obj, buttonName) => {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n};\n\nexport default calculate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Result = (props) => {\n  const { output } = props;\n  return <div className=\"result\">{output}</div>;\n};\n\nResult.defaultProps = {\n  output: '0',\n};\n\nResult.propTypes = {\n  output: PropTypes.string,\n};\n\nexport { Result as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = (props) => {\n  const handleClick = (e) => {\n    const { handleButtonClick } = props;\n    handleButtonClick(e.target.textContent);\n  };\n\n  const { className, buttonName } = props;\n  return (\n    <button type=\"button\" className={className} onClick={handleClick}>\n      {buttonName}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  className: '',\n  buttonName: '',\n  handleButtonClick: () => {},\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  buttonName: PropTypes.string,\n  handleButtonClick: PropTypes.func,\n};\n\nexport { Button as default };\n","import './Calculator.css';\nimport React, { useState } from 'react';\nimport calculate from '../logic/calculate';\nimport Result from './result';\nimport Button from './button';\n\nlet obj = {};\n\nconst Calculator = () => {\n  const [output, setOutput] = useState(0);\n\n  const handleButtonClick = (buttonName) => {\n    obj = calculate(obj, buttonName);\n\n    let outStr = '';\n    if (obj.total) {\n      outStr += obj.total;\n    }\n    if (obj.operation) {\n      outStr += obj.operation;\n    }\n    if (obj.next) {\n      outStr += obj.next;\n    }\n    if (outStr === '') {\n      outStr += '0';\n    }\n\n    setOutput(outStr);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Let&apos;s do some math!</h2>\n      <div className=\"calculator\">\n        <Result output={output} />\n        <div className=\"numbers-oberations\">\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"AC\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"+/-\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"%\" />\n          <Button handleButtonClick={handleButtonClick} className=\"last\" buttonName=\"รท\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"7\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"8\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"9\" />\n          <Button handleButtonClick={handleButtonClick} className=\"last\" buttonName=\"x\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"4\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"5\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"6\" />\n          <Button handleButtonClick={handleButtonClick} className=\"last\" buttonName=\"-\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"1\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"2\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\"3\" />\n          <Button handleButtonClick={handleButtonClick} className=\"last\" buttonName=\"+\" />\n          <Button handleButtonClick={handleButtonClick} className=\"zero-btn\" buttonName=\"0\" />\n          <Button handleButtonClick={handleButtonClick} className=\"\" buttonName=\".\" />\n          <Button handleButtonClick={handleButtonClick} className=\"last\" buttonName=\"=\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Calculator as default };\n","import React from 'react';\n\nconst Home = () => (\n  <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '0 20px',\n  }}\n  >\n    <h2>Welcome to out page!</h2>\n    <p>\n      Lorem ipsum dolor sit amet,\n      consectetur adipiscing elit,\n      sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n      Ut enim ad minim veniam,\n      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n      Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n      fugiat nulla pariatur.\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n      mollit anim id est laborum.\n    </p>\n    <p>\n      Lorem ipsum dolor sit amet,\n      consectetur adipiscing elit,\n      sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n      Ut enim ad minim veniam,\n      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n      Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n      fugiat nulla pariatur.\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n      mollit anim id est laborum.\n    </p>\n  </div>\n);\n\nexport { Home as default };\n","import React from 'react';\n\nconst Quote = () => (\n  <div style={{\n    height: 'calc( 70vh - 100px )',\n    fontSize: '30px',\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n    padding: '0 60px',\n  }}\n  >\n    Mathematics is not about numbers, equations, computations,\n    or algorithms: it is about understanding. - William Paul Thurston\n  </div>\n);\n\nexport { Quote as default };\n","import './App.css';\nimport {\n  Routes, Route, Link,\n} from 'react-router-dom';\nimport Calculator from './components/Calculator';\nimport Home from './components/Home';\nimport Quote from './components/Quote';\n\nfunction App() {\n  return (\n    <div>\n      <nav>\n        <h1>Math Magicians</h1>\n        <ul>\n          <li>\n            <Link to=\"/Math-Magicians/\">Home</Link>\n          </li>\n          |\n          <li>\n            <Link to=\"/Math-Magicians/calculator\">Calculator</Link>\n          </li>\n          |\n          <li>\n            <Link to=\"/Math-Magicians/quote\">Quote</Link>\n          </li>\n        </ul>\n      </nav>\n\n      <Routes>\n        <Route path=\"/Math-Magicians/\" element={<Home />} />\n        <Route path=\"/Math-Magicians/calculator\" element={<Calculator />} />\n        <Route path=\"/Math-Magicians/quote\" element={<Quote />} />\n      </Routes>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}